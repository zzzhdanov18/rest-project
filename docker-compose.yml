version: '3.8'

services:
  fast-api-app:
    container_name: fast-api-app
    restart: always
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - '.env'
    environment:
      - DATABASE_URL=${MAIN_DATABASE_URL}
      - CACHE_HOST=${MAIN_CACHE_HOST}
    entrypoint: >
      sh -c "uvicorn main:app --host 0.0.0.0 --port 8000"
    links:
      - db
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis_cache:
        condition: service_healthy
    networks:
      - mynetwork



  db:
    image: postgres:15.1-alpine
    ports:
      - "5432:5432"
    restart: always
    env_file:
      - '.env'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - mynetwork


  redis_cache:
    image: redis:latest
    container_name: redis_cache
    ports:
      - "6379:6379"
    restart: always
    environment:
      - REDIS_PORT=${REDIS_PORT}
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - mynetwork

networks:
  mynetwork:
    name: mynetwork

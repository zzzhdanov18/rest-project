version: '3.8'

services:
  fast-api-test:
    container_name: fast-api-test
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - '.env'
    environment:
      - DATABASE_URL=${TEST_DATABASE_URL}
      - CACHE_HOST=${TEST_CACHE_HOST}
    command: "pytest -v ./tests/test_api.py"
    networks:
      - test_network
    links:
      - test_db
    depends_on:
      test_db:
        condition: service_healthy
      test_redis_cache:
        condition: service_healthy



  test_db:
    image: postgres:15.1-alpine
    ports:
      - "5433:5432"
    restart: always
    env_file:
      - '.env'
    environment:
      - POSTGRES_PASSWORD=${TEST_POSTGRES_PASSWORD}
      - POSTGRES_USER=${TEST_POSTGRES_USER}
      - POSTGRES_DB=${TEST_POSTGRES_DB}
      - POSTGRES_PORT=${TEST_POSTGRES_PORT}
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${TEST_POSTGRES_DB}", "-U", "${TEST_POSTGRES_USER}" ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - test_network

  test_redis_cache:
    image: redis:latest
    container_name: test_redis_cache
    ports:
      - "6380:6379"
    restart: always
    environment:
      - REDIS_PORT=${REDIS_PORT}
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      timeout: 45s
      interval: 10s
      retries: 10
    networks:
      - test_network


networks:
  test_network:
      name: test_network
